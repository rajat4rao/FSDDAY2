JavaScript's document and window Objects

- The document Object: Accessing and Manipulating Content
The document object represents the current web page loaded in the browser. It accesses and manipulates the Document Object Model(DOM), which is the hierarchical representation of the HTML elements on the page. Through the document object, you can interact with elements, modify their content, styles, and attributes, as well as create, append, or remove nodes from the DOM tree.
For example:

const heading = document.getElementById('MAINHEADING');
heading.textContent = 'New Heading';

The above code accesses a DOM element by it's Id and modifiy the text content of the element.

- The window Object: The Browser's Global Scope
The window object represents the browser window or tab itself. It is the global scope for javascript execution in the browser. The variables and functions declared globally are automatically added as properties and methods of the window object. Window object also provides access to browser-level functionalities and APIs.
Common use cases include:

 -Using browser's console through window.console
 -Browser dialogs and prompts using window.alert(), window.confirm(), and window.prompt()
 -Accessing and modifying the current URL through window.location
 -Timing functions with window.setTimeout() and window.setInterval()

For example:

// Setting a timeout to execute a function after 2 seconds
window.setTimeout(function() {
  console.log('This message will appear after 2 seconds.');
}, 2000);


